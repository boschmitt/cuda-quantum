name: Build and test

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - '.github/workflows/build_and_test.yml'
      - '**.cpp'
      - '**.h'
      - '**.in'
      - '**.py'
      - '**.mlir'
      - '**.qtx'
      - '**.qke'
      - '**/CMakeLists.txt'
  pull_request:
    branches: [main]
    types: [assigned, opened, synchronize, reopened]
    paths:
      - '.github/workflows/build_and_test.yml'
      - '**.cpp'
      - '**.h'
      - '**.in'
      - '**.py'
      - '**.mlir'
      - '**.qtx'
      - '**.qke'
      - '**/CMakeLists.txt'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    name: Build and test
    runs-on: ubuntu-latest
    container: ghcr.io/${{ github.repository }}-dev:${{ matrix.compiler.cc }}-latest
    strategy:
      matrix:
        compiler:
          - cc: clang-15
            cxx: clang++-15
            mode: Debug
          - cc: gcc-11
            cxx: g++-11
            mode: Release
          - cc: gcc-12
            cxx: g++-12
            mode: Release

    steps:
      - name: Decompress LLVM build
        run: tar --posix --use-compress-program=unzstd -C /opt -xf /llvm.tar.tzst

      - name: Get code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set git safe
        run: git config --global --add safe.directory $PWD

      - name: Get LLVM build identifier
        id: get-llvm-build-id
        uses: ./.github/actions/get-llvm-build-id
        with:
          toolchain: gcc-11

      - name: Check ID
        run: |
          LLVM_ID="$(cat /opt/llvm/cache-key)"
          if [ "$LLVM_ID" != "${{ steps.get-llvm-build-id.outputs.id }}" ]; then
            echo "::error::Dev image not updated yet"
            exit 1
          fi

      - name: Check formatting
        uses: ./.github/actions/check-formatting

      # We need this to install CCache successfuly
      - name: Apt-get update
        run: apt-get update

      - name: Set up CCache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          append-timestamp: false
          key: cudaq-${{ runner.os }}-${{ matrix.compiler.cc }}-${{ matrix.compiler.mode }}${{ github.event.pull_request.number }}
          restore-keys: cudaq-${{ runner.os }}-${{ matrix.compiler.cc }}-${{ matrix.compiler.mode }}

      - name: Build
        run: .github/workflows/scripts/build_cudaq.sh /opt/llvm ${{ matrix.compiler.mode }} ${{ matrix.compiler.cc }} ${{ matrix.compiler.cxx }} ccache

      - name: Run tests
        run: ctest --output-on-failure --test-dir build

