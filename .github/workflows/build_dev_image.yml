name: Build the dev image

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - '.github/workflows/build_dev_image.yml'
      - 'docker/build/devdeps.Dockerfile'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build-image:
    name: Build image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toolchain: [clang15, gcc11]

    steps:
      - name: Get CUDA Quantum
        uses: actions/checkout@v3

      - name: Get LLVM hash
        id: get-llvm-hash
        run: |
          echo "hash=$(git rev-parse @:./tpls/llvm)" >> $GITHUB_OUTPUT

      - name: Get dockerfile hash
        id: get-dockerfile-hash
        run: |
          echo "hash=$(md5sum ./docker/build/devenv.Dockerfile | awk '{print $1}')" >> $GITHUB_OUTPUT

      - name: Construct image cache key
        id: image-cache-key
        run: |
          echo "key=dev-image-${{ steps.get-dockerfile-hash.outputs.hash }}-${{ steps.get-llvm-hash.outputs.hash }}-${{ matrix.toolchain }}" >> $GITHUB_OUTPUT

      - name: Check if already built
        id: lookup-cache
        uses: actions/cache@v3
        with:
          path: /tmp/dev-image.tar
          key: ${{ steps.image-cache-key.outputs.key }}-tar
          lookup-only: 'true'

      - name: Set up buildx runner
        if: steps.lookup-cache.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v2

      - name: Build
        if: steps.lookup-cache.outputs.cache-hit != 'true'
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./docker/build/devenv.Dockerfile
          build-args: |
            llvm_commit_sha=${{ steps.get-llvm-hash.outputs.hash }}
            toolchain=${{ matrix.toolchain }}
          push: false
          cache-from: type=gha,scope=${{ steps.image-cache-key.outputs.key }}
          cache-to: type=gha,mode=max,scope=${{ steps.image-cache-key.outputs.key }}
          outputs: type=docker,dest=/tmp/dev-image.tar

      - name: Cache
        if: steps.lookup-cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: /tmp/dev-image.tar
          key: ${{ steps.image-cache-key.outputs.key }}-tar

